{
  "swagger": "2.0",
  "info": {
    "version": "2.1",
    "title": "Magento Enterprise"
  },
  "host": "acme.m2",
  "basePath": "/rest/default",
  "schemes": [
    "https"
  ],
  "tags": [
    {
      "name": "directoryCurrencyInformationAcquirerV1",
      "description": "Currency information acquirer interface"
    },
    {
      "name": "directoryCountryInformationAcquirerV1",
      "description": "Country information acquirer interface"
    },
    {
      "name": "customerAccountManagementV1",
      "description": "Interface for managing customers accounts."
    },
    {
      "name": "searchV1",
      "description": "Search API for all requests"
    },
    {
      "name": "quoteCartRepositoryV1",
      "description": "Interface CartRepositoryInterface"
    },
    {
      "name": "quoteCartManagementV1",
      "description": "Interface CartManagementInterface"
    },
    {
      "name": "quoteGuestCartRepositoryV1",
      "description": "Cart Repository interface for guest carts."
    },
    {
      "name": "quoteGuestCartManagementV1",
      "description": "Cart Management interface for guest carts."
    },
    {
      "name": "quoteGuestShippingMethodManagementV1",
      "description": "Shipping method management interface for guest carts."
    },
    {
      "name": "quoteGuestShipmentEstimationV1",
      "description": "Interface GuestShipmentEstimationInterface"
    },
    {
      "name": "quoteGuestCartItemRepositoryV1",
      "description": "Cart Item repository interface for guest carts."
    },
    {
      "name": "quoteGuestPaymentMethodManagementV1",
      "description": "Payment method management interface for guest carts."
    },
    {
      "name": "quoteGuestBillingAddressManagementV1",
      "description": "Billing address management interface for guest carts."
    },
    {
      "name": "quoteGuestCouponManagementV1",
      "description": "Coupon management interface for guest carts."
    },
    {
      "name": "quoteGuestCartTotalManagementV1",
      "description": "Bundled API to collect totals for cart based on shipping/payment methods and additional data."
    },
    {
      "name": "quoteGuestCartTotalRepositoryV1",
      "description": "Cart totals repository interface for guest carts."
    },
    {
      "name": "quoteCartTotalManagementV1",
      "description": "Bundled API to collect totals for cart based on shipping/payment methods and additional data."
    },
    {
      "name": "checkoutGuestShippingInformationManagementV1",
      "description": "Interface for managing guest shipping address information"
    },
    {
      "name": "checkoutGuestTotalsInformationManagementV1",
      "description": "Interface for guest quote totals calculation"
    },
    {
      "name": "checkoutGuestPaymentInformationManagementV1",
      "description": "Interface for managing guest payment information"
    },
    {
      "name": "checkoutPaymentInformationManagementV1",
      "description": "Interface for managing quote payment information"
    },
    {
      "name": "customerBalanceBalanceManagementV1",
      "description": "Customer balance(store credit) operations"
    },
    {
      "name": "giftCardAccountGiftCardAccountManagementV1",
      "description": "Interface GiftCardAccountManagementInterface"
    },
    {
      "name": "giftCardAccountGuestGiftCardAccountManagementV1",
      "description": "Interface GuestGiftCardAccountManagementInterface"
    },
    {
      "name": "giftMessageGuestCartRepositoryV1",
      "description": "Interface GuestCartRepositoryInterface"
    },
    {
      "name": "giftMessageGuestItemRepositoryV1",
      "description": "Interface GuestItemRepositoryInterface"
    },
    {
      "name": "giftRegistryShippingMethodManagementV1",
      "description": "Interface ShippingMethodManagementInterface"
    },
    {
      "name": "giftRegistryGuestCartShippingMethodManagementV1",
      "description": "Interface ShippingMethodManagementInterface"
    },
    {
      "name": "rewardRewardManagementV1",
      "description": "Interface RewardManagementInterface"
    },
    {
      "name": "integrationAdminTokenServiceV1",
      "description": "Interface providing token generation for Admins"
    },
    {
      "name": "integrationCustomerTokenServiceV1",
      "description": "Interface providing token generation for Customers"
    },
    {
      "name": "worldpayGuestPaymentInformationManagementProxyV1",
      "description": "Interface GuestPaymentInformationManagementProxyInterface"
    },
    {
      "name": "acmeBasketPaymentTypeServiceV1",
      "description": "Interface PaymentType"
    },
    {
      "name": "acmeBranchesStockBranchStockCheckV1",
      "description": ""
    },
    {
      "name": "acmeCatalogProductInformationServiceV1",
      "description": ""
    },
    {
      "name": "acmeManageBasketAddToBasketV1",
      "description": ""
    },
    {
      "name": "acmeManageBasketChangePurchaseTypeV1",
      "description": ""
    },
    {
      "name": "acmeManageBasketUpdateQuantityV1",
      "description": ""
    },
    {
      "name": "acmeManageBasketRemoveItemV1",
      "description": ""
    },
    {
      "name": "acmeManageBasketSelectBranchV1",
      "description": ""
    },
    {
      "name": "acmeVatSwitchV1",
      "description": ""
    }
  ],
  "paths": {
    "/V1/baskets/mine/add": {
      "put": {
        "tags": [
          "acmeManageBasketAddToBasketV1"
        ],
        "description": "",
        "operationId": "acmeManageBasketAddToBasketV1AddProductPut",
        "parameters": [
          {
            "name": "$body",
            "in": "body",
            "schema": {
              "required": [
                "productId",
                "qty",
                "purchaseType"
              ],
              "properties": {
                "productId": {
                  "type": "integer"
                },
                "qty": {
                  "type": "number"
                },
                "purchaseType": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "schema": {
              "$ref": "#/definitions/acme-manage-basket-result-interface"
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "schema": {
              "$ref": "#/definitions/error-response"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/error-response"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "error-response": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "description": "Error message"
        },
        "errors": {
          "$ref": "#/definitions/error-errors"
        },
        "code": {
          "type": "integer",
          "description": "Error code"
        },
        "parameters": {
          "$ref": "#/definitions/error-parameters"
        },
        "trace": {
          "type": "string",
          "description": "Stack trace"
        }
      },
      "required": [
        "message"
      ]
    },
    "error-errors": {
      "type": "array",
      "description": "Errors list",
      "items": {
        "$ref": "#/definitions/error-errors-item"
      }
    },
    "error-errors-item": {
      "type": "object",
      "description": "Error details",
      "properties": {
        "message": {
          "type": "string",
          "description": "Error message"
        },
        "parameters": {
          "$ref": "#/definitions/error-parameters"
        }
      }
    },
    "error-parameters": {
      "type": "array",
      "description": "Error parameters list",
      "items": {
        "$ref": "#/definitions/error-parameters-item"
      }
    },
    "error-parameters-item": {
      "type": "object",
      "description": "Error parameters item",
      "properties": {
        "resources": {
          "type": "string",
          "description": "ACL resource"
        },
        "fieldName": {
          "type": "string",
          "description": "Missing or invalid field name"
        },
        "fieldValue": {
          "type": "string",
          "description": "Incorrect field value"
        }
      }
    },
    "directory-data-currency-information-interface": {
      "type": "object",
      "description": "Currency Information interface.",
      "properties": {
        "base_currency_code": {
          "type": "string",
          "description": "The base currency code for the store."
        },
        "base_currency_symbol": {
          "type": "string",
          "description": "The currency symbol of the base currency for the store."
        },
        "default_display_currency_code": {
          "type": "string",
          "description": "The default display currency code for the store."
        },
        "default_display_currency_symbol": {
          "type": "string",
          "description": "The currency symbol of the default display currency for the store."
        },
        "available_currency_codes": {
          "type": "array",
          "description": "The list of allowed currency codes for the store.",
          "items": {
            "type": "string"
          }
        },
        "exchange_rates": {
          "type": "array",
          "description": "The list of exchange rate information for the store.",
          "items": {
            "$ref": "#/definitions/directory-data-exchange-rate-interface"
          }
        },
        "extension_attributes": {
          "$ref": "#/definitions/directory-data-currency-information-extension-interface"
        }
      },
      "required": [
        "base_currency_code",
        "base_currency_symbol",
        "default_display_currency_code",
        "default_display_currency_symbol",
        "available_currency_codes",
        "exchange_rates"
      ]
    },
    "directory-data-exchange-rate-interface": {
      "type": "object",
      "description": "Exchange Rate interface.",
      "properties": {
        "currency_to": {
          "type": "string",
          "description": "The currency code associated with the exchange rate."
        },
        "rate": {
          "type": "number",
          "description": "The exchange rate for the associated currency and the store's base currency."
        },
        "extension_attributes": {
          "$ref": "#/definitions/directory-data-exchange-rate-extension-interface"
        }
      },
      "required": [
        "currency_to",
        "rate"
      ]
    },
    "directory-data-exchange-rate-extension-interface": {
      "type": "object",
      "description": "ExtensionInterface class for @see \\Magento\\Directory\\Api\\Data\\ExchangeRateInterface"
    },
    "directory-data-currency-information-extension-interface": {
      "type": "object",
      "description": "ExtensionInterface class for @see \\Magento\\Directory\\Api\\Data\\CurrencyInformationInterface"
    },
    "directory-data-country-information-interface": {
      "type": "object",
      "description": "Country Information interface.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The country id for the store."
        },
        "two_letter_abbreviation": {
          "type": "string",
          "description": "The country 2 letter abbreviation for the store."
        },
        "three_letter_abbreviation": {
          "type": "string",
          "description": "The country 3 letter abbreviation for the store."
        },
        "full_name_locale": {
          "type": "string",
          "description": "The country full name (in store locale) for the store."
        },
        "full_name_english": {
          "type": "string",
          "description": "The country full name (in English) for the store."
        },
        "available_regions": {
          "type": "array",
          "description": "The available regions for the store.",
          "items": {
            "$ref": "#/definitions/directory-data-region-information-interface"
          }
        },
        "extension_attributes": {
          "$ref": "#/definitions/directory-data-country-information-extension-interface"
        }
      },
      "required": [
        "id",
        "two_letter_abbreviation",
        "three_letter_abbreviation",
        "full_name_locale",
        "full_name_english"
      ]
    },
    "directory-data-region-information-interface": {
      "type": "object",
      "description": "Region Information interface.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Region id"
        },
        "code": {
          "type": "string",
          "description": "Region code"
        },
        "name": {
          "type": "string",
          "description": "Region name"
        },
        "extension_attributes": {
          "$ref": "#/definitions/directory-data-region-information-extension-interface"
        }
      },
      "required": [
        "id",
        "code",
        "name"
      ]
    },
    "directory-data-region-information-extension-interface": {
      "type": "object",
      "description": "ExtensionInterface class for @see \\Magento\\Directory\\Api\\Data\\RegionInformationInterface"
    },
    "directory-data-country-information-extension-interface": {
      "type": "object",
      "description": "ExtensionInterface class for @see \\Magento\\Directory\\Api\\Data\\CountryInformationInterface"
    },
    "customer-data-customer-interface": {
      "type": "object",
      "description": "Customer interface.",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Customer id"
        },
        "group_id": {
          "type": "integer",
          "description": "Group id"
        },
        "default_billing": {
          "type": "string",
          "description": "Default billing address id"
        },
        "default_shipping": {
          "type": "string",
          "description": "Default shipping address id"
        },
        "confirmation": {
          "type": "string",
          "description": "Confirmation"
        },
        "created_at": {
          "type": "string",
          "description": "Created at time"
        },
        "updated_at": {
          "type": "string",
          "description": "Updated at time"
        },
        "created_in": {
          "type": "string",
          "description": "Created in area"
        },
        "dob": {
          "type": "string",
          "description": "Date of birth"
        },
        "email": {
          "type": "string",
          "description": "Email address"
        },
        "firstname": {
          "type": "string",
          "description": "First name"
        },
        "lastname": {
          "type": "string",
          "description": "Last name"
        },
        "middlename": {
          "type": "string",
          "description": "Middle name"
        },
        "prefix": {
          "type": "string",
          "description": "Prefix"
        },
        "suffix": {
          "type": "string",
          "description": "Suffix"
        },
        "gender": {
          "type": "integer",
          "description": "Gender"
        },
        "store_id": {
          "type": "integer",
          "description": "Store id"
        },
        "taxvat": {
          "type": "string",
          "description": "Tax Vat"
        },
        "website_id": {
          "type": "integer",
          "description": "Website id"
        },
        "addresses": {
          "type": "array",
          "description": "Customer addresses.",
          "items": {
            "$ref": "#/definitions/customer-data-address-interface"
          }
        },
        "disable_auto_group_change": {
          "type": "integer",
          "description": "Disable auto group change flag."
        },
        "extension_attributes": {
          "$ref": "#/definitions/customer-data-customer-extension-interface"
        },
        "custom_attributes": {
          "type": "array",
          "description": "Custom attributes values.",
          "items": {
            "$ref": "#/definitions/framework-attribute-interface"
          }
        }
      },
      "required": [
        "email",
        "firstname",
        "lastname"
      ]
    },
    "customer-data-address-interface": {
      "type": "object",
      "description": "Customer address interface.",
      "properties": {
        "id": {
          "type": "integer",
          "description": "ID"
        },
        "customer_id": {
          "type": "integer",
          "description": "Customer ID"
        },
        "region": {
          "$ref": "#/definitions/customer-data-region-interface"
        },
        "region_id": {
          "type": "integer",
          "description": "Region ID"
        },
        "country_id": {
          "type": "string",
          "description": "Country code in ISO_3166-2 format"
        },
        "street": {
          "type": "array",
          "description": "Street",
          "items": {
            "type": "string"
          }
        },
        "company": {
          "type": "string",
          "description": "Company"
        },
        "telephone": {
          "type": "string",
          "description": "Telephone number"
        },
        "fax": {
          "type": "string",
          "description": "Fax number"
        },
        "postcode": {
          "type": "string",
          "description": "Postcode"
        },
        "city": {
          "type": "string",
          "description": "City name"
        },
        "firstname": {
          "type": "string",
          "description": "First name"
        },
        "lastname": {
          "type": "string",
          "description": "Last name"
        },
        "middlename": {
          "type": "string",
          "description": "Middle name"
        },
        "prefix": {
          "type": "string",
          "description": "Prefix"
        },
        "suffix": {
          "type": "string",
          "description": "Suffix"
        },
        "vat_id": {
          "type": "string",
          "description": "Vat id"
        },
        "default_shipping": {
          "type": "boolean",
          "description": "If this address is default shipping address."
        },
        "default_billing": {
          "type": "boolean",
          "description": "If this address is default billing address"
        },
        "extension_attributes": {
          "$ref": "#/definitions/customer-data-address-extension-interface"
        },
        "custom_attributes": {
          "type": "array",
          "description": "Custom attributes values.",
          "items": {
            "$ref": "#/definitions/framework-attribute-interface"
          }
        }
      }
    },
    "customer-data-region-interface": {
      "type": "object",
      "description": "Customer address region interface.",
      "properties": {
        "region_code": {
          "type": "string",
          "description": "Region code"
        },
        "region": {
          "type": "string",
          "description": "Region"
        },
        "region_id": {
          "type": "integer",
          "description": "Region id"
        },
        "extension_attributes": {
          "$ref": "#/definitions/customer-data-region-extension-interface"
        }
      },
      "required": [
        "region_code",
        "region",
        "region_id"
      ]
    },
    "customer-data-region-extension-interface": {
      "type": "object",
      "description": "ExtensionInterface class for @see \\Magento\\Customer\\Api\\Data\\RegionInterface"
    },
    "customer-data-address-extension-interface": {
      "type": "object",
      "description": "ExtensionInterface class for @see \\Magento\\Customer\\Api\\Data\\AddressInterface"
    },
    "framework-attribute-interface": {
      "type": "object",
      "description": "Interface for custom attribute value.",
      "properties": {
        "attribute_code": {
          "type": "string",
          "description": "Attribute code"
        },
        "value": {
          "type": "string",
          "description": "Attribute value"
        }
      },
      "required": [
        "attribute_code",
        "value"
      ]
    },
    "customer-data-customer-extension-interface": {
      "type": "object",
      "description": "ExtensionInterface class for @see \\Magento\\Customer\\Api\\Data\\CustomerInterface",
      "properties": {
        "is_subscribed": {
          "type": "boolean"
        }
      }
    },
    "framework-search-search-result-interface": {
      "type": "object",
      "description": "",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/framework-search-document-interface"
          }
        },
        "aggregations": {
          "$ref": "#/definitions/framework-search-aggregation-interface"
        },
        "search_criteria": {
          "$ref": "#/definitions/framework-search-search-criteria-interface"
        },
        "total_count": {
          "type": "integer",
          "description": "Total count."
        }
      },
      "required": [
        "items",
        "aggregations",
        "search_criteria",
        "total_count"
      ]
    },
    "framework-search-document-interface": {
      "type": "object",
      "description": "",
      "properties": {
        "id": {
          "type": "integer"
        },
        "custom_attributes": {
          "type": "array",
          "description": "Custom attributes values.",
          "items": {
            "$ref": "#/definitions/framework-attribute-interface"
          }
        }
      },
      "required": [
        "id"
      ]
    },
    "framework-search-aggregation-interface": {
      "type": "object",
      "description": "Faceted data",
      "properties": {
        "buckets": {
          "type": "array",
          "description": "All Document fields",
          "items": {
            "$ref": "#/definitions/framework-search-bucket-interface"
          }
        },
        "bucket_names": {
          "type": "array",
          "description": "Document field names",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "buckets",
        "bucket_names"
      ]
    },
    "framework-search-bucket-interface": {
      "type": "object",
      "description": "Facet Bucket",
      "properties": {
        "name": {
          "type": "string",
          "description": "Field name"
        },
        "values": {
          "type": "array",
          "description": "Field values",
          "items": {
            "$ref": "#/definitions/framework-search-aggregation-value-interface"
          }
        }
      },
      "required": [
        "name",
        "values"
      ]
    },
    "framework-search-aggregation-value-interface": {
      "type": "object",
      "description": "",
      "properties": {
        "value": {
          "type": "string",
          "description": "Aggregation"
        },
        "metrics": {
          "type": "array",
          "description": "Metrics",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "value",
        "metrics"
      ]
    },
    "framework-search-search-criteria-interface": {
      "type": "object",
      "description": "",
      "properties": {
        "request_name": {
          "type": "string"
        },
        "filter_groups": {
          "type": "array",
          "description": "A list of filter groups.",
          "items": {
            "$ref": "#/definitions/framework-search-filter-group"
          }
        },
        "sort_orders": {
          "type": "array",
          "description": "Sort order.",
          "items": {
            "$ref": "#/definitions/framework-sort-order"
          }
        },
        "page_size": {
          "type": "integer",
          "description": "Page size."
        },
        "current_page": {
          "type": "integer",
          "description": "Current page."
        }
      },
      "required": [
        "request_name",
        "filter_groups"
      ]
    },
    "framework-search-filter-group": {
      "type": "object",
      "description": "Groups two or more filters together using a logical OR",
      "properties": {
        "filters": {
          "type": "array",
          "description": "A list of filters in this group",
          "items": {
            "$ref": "#/definitions/framework-filter"
          }
        }
      }
    },
    "framework-filter": {
      "type": "object",
      "description": "Filter which can be used by any methods from service layer.",
      "properties": {
        "field": {
          "type": "string",
          "description": "Field"
        },
        "value": {
          "type": "string",
          "description": "Value"
        },
        "condition_type": {
          "type": "string",
          "description": "Condition type"
        }
      },
      "required": [
        "field",
        "value"
      ]
    },
    "framework-sort-order": {
      "type": "object",
      "description": "Data object for sort order.",
      "properties": {
        "field": {
          "type": "string",
          "description": "Sorting field."
        },
        "direction": {
          "type": "string",
          "description": "Sorting direction."
        }
      },
      "required": [
        "field",
        "direction"
      ]
    },
    "quote-data-cart-interface": {
      "type": "object",
      "description": "Interface CartInterface",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Cart/quote ID."
        },
        "created_at": {
          "type": "string",
          "description": "Cart creation date and time. Otherwise, null."
        },
        "updated_at": {
          "type": "string",
          "description": "Cart last update date and time. Otherwise, null."
        },
        "converted_at": {
          "type": "string",
          "description": "Cart conversion date and time. Otherwise, null."
        },
        "is_active": {
          "type": "boolean",
          "description": "Active status flag value. Otherwise, null."
        },
        "is_virtual": {
          "type": "boolean",
          "description": "Virtual flag value. Otherwise, null."
        },
        "items": {
          "type": "array",
          "description": "Array of items. Otherwise, null.",
          "items": {
            "$ref": "#/definitions/quote-data-cart-item-interface"
          }
        },
        "items_count": {
          "type": "integer",
          "description": "Number of different items or products in the cart. Otherwise, null."
        },
        "items_qty": {
          "type": "number",
          "description": "Total quantity of all cart items. Otherwise, null."
        },
        "customer": {
          "$ref": "#/definitions/customer-data-customer-interface"
        },
        "billing_address": {
          "$ref": "#/definitions/quote-data-address-interface"
        },
        "reserved_order_id": {
          "type": "integer",
          "description": "Reserved order ID. Otherwise, null."
        },
        "orig_order_id": {
          "type": "integer",
          "description": "Original order ID. Otherwise, null."
        },
        "currency": {
          "$ref": "#/definitions/quote-data-currency-interface"
        },
        "customer_is_guest": {
          "type": "boolean",
          "description": "For guest customers, false for logged in customers"
        },
        "customer_note": {
          "type": "string",
          "description": "Notice text"
        },
        "customer_note_notify": {
          "type": "boolean",
          "description": "Customer notification flag"
        },
        "customer_tax_class_id": {
          "type": "integer",
          "description": "Customer tax class ID."
        },
        "store_id": {
          "type": "integer",
          "description": "Store identifier"
        },
        "extension_attributes": {
          "$ref": "#/definitions/quote-data-cart-extension-interface"
        }
      },
      "required": [
        "id",
        "customer",
        "store_id"
      ]
    },
    "quote-data-cart-item-interface": {
      "type": "object",
      "description": "Interface CartItemInterface",
      "properties": {
        "item_id": {
          "type": "integer",
          "description": "Item ID. Otherwise, null."
        },
        "sku": {
          "type": "string",
          "description": "Product SKU. Otherwise, null."
        },
        "qty": {
          "type": "number",
          "description": "Product quantity."
        },
        "name": {
          "type": "string",
          "description": "Product name. Otherwise, null."
        },
        "price": {
          "type": "number",
          "description": "Product price. Otherwise, null."
        },
        "product_type": {
          "type": "string",
          "description": "Product type. Otherwise, null."
        },
        "quote_id": {
          "type": "string",
          "description": "Quote id."
        },
        "product_option": {
          "$ref": "#/definitions/quote-data-product-option-interface"
        },
        "extension_attributes": {
          "$ref": "#/definitions/quote-data-cart-item-extension-interface"
        }
      },
      "required": [
        "qty",
        "quote_id"
      ]
    },
    "quote-data-product-option-interface": {
      "type": "object",
      "description": "Product option interface",
      "properties": {
        "extension_attributes": {
          "$ref": "#/definitions/quote-data-product-option-extension-interface"
        }
      }
    },
    "quote-data-product-option-extension-interface": {
      "type": "object",
      "description": "ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\ProductOptionInterface",
      "properties": {
        "custom_options": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/catalog-data-custom-option-interface"
          }
        },
        "bundle_options": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/bundle-data-bundle-option-interface"
          }
        },
        "downloadable_option": {
          "$ref": "#/definitions/downloadable-data-downloadable-option-interface"
        },
        "giftcard_item_option": {
          "$ref": "#/definitions/gift-card-data-gift-card-option-interface"
        },
        "configurable_item_options": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/configurable-product-data-configurable-item-option-value-interface"
          }
        }
      }
    },
    "catalog-data-custom-option-interface": {
      "type": "object",
      "description": "Interface CustomOptionInterface",
      "properties": {
        "option_id": {
          "type": "string",
          "description": "Option id"
        },
        "option_value": {
          "type": "string",
          "description": "Option value"
        },
        "extension_attributes": {
          "$ref": "#/definitions/catalog-data-custom-option-extension-interface"
        }
      },
      "required": [
        "option_id",
        "option_value"
      ]
    },
    "catalog-data-custom-option-extension-interface": {
      "type": "object",
      "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\CustomOptionInterface",
      "properties": {
        "file_info": {
          "$ref": "#/definitions/framework-data-image-content-interface"
        }
      }
    },
    "framework-data-image-content-interface": {
      "type": "object",
      "description": "Image Content data interface",
      "properties": {
        "base64_encoded_data": {
          "type": "string",
          "description": "Media data (base64 encoded content)"
        },
        "type": {
          "type": "string",
          "description": "MIME type"
        },
        "name": {
          "type": "string",
          "description": "Image name"
        }
      },
      "required": [
        "base64_encoded_data",
        "type",
        "name"
      ]
    },
    "bundle-data-bundle-option-interface": {
      "type": "object",
      "description": "Interface BundleOptionInterface",
      "properties": {
        "option_id": {
          "type": "integer",
          "description": "Bundle option id."
        },
        "option_qty": {
          "type": "integer",
          "description": "Bundle option quantity."
        },
        "option_selections": {
          "type": "array",
          "description": "Bundle option selection ids.",
          "items": {
            "type": "integer"
          }
        },
        "extension_attributes": {
          "$ref": "#/definitions/bundle-data-bundle-option-extension-interface"
        }
      },
      "required": [
        "option_id",
        "option_qty",
        "option_selections"
      ]
    },
    "bundle-data-bundle-option-extension-interface": {
      "type": "object",
      "description": "ExtensionInterface class for @see \\Magento\\Bundle\\Api\\Data\\BundleOptionInterface"
    },
    "downloadable-data-downloadable-option-interface": {
      "type": "object",
      "description": "Downloadable Option",
      "properties": {
        "downloadable_links": {
          "type": "array",
          "description": "The list of downloadable links",
          "items": {
            "type": "integer"
          }
        }
      },
      "required": [
        "downloadable_links"
      ]
    },
    "gift-card-data-gift-card-option-interface": {
      "type": "object",
      "description": "Interface GiftCardOptionInterface",
      "properties": {
        "giftcard_amount": {
          "type": "string",
          "description": "Gift card amount."
        },
        "custom_giftcard_amount": {
          "type": "number",
          "description": "Gift card open amount value."
        },
        "giftcard_sender_name": {
          "type": "string",
          "description": "Gift card sender name."
        },
        "giftcard_recipient_name": {
          "type": "string",
          "description": "Gift card recipient name."
        },
        "giftcard_sender_email": {
          "type": "string",
          "description": "Gift card sender email."
        },
        "giftcard_recipient_email": {
          "type": "string",
          "description": "Gift card recipient email."
        },
        "giftcard_message": {
          "type": "string",
          "description": "Giftcard message."
        },
        "extension_attributes": {
          "$ref": "#/definitions/gift-card-data-gift-card-option-extension-interface"
        }
      },
      "required": [
        "giftcard_amount",
        "giftcard_sender_name",
        "giftcard_recipient_name",
        "giftcard_sender_email",
        "giftcard_recipient_email"
      ]
    },
    "gift-card-data-gift-card-option-extension-interface": {
      "type": "object",
      "description": "ExtensionInterface class for @see \\Magento\\GiftCard\\Api\\Data\\GiftCardOptionInterface"
    },
    "configurable-product-data-configurable-item-option-value-interface": {
      "type": "object",
      "description": "Interface ConfigurableItemOptionValueInterface",
      "properties": {
        "option_id": {
          "type": "string",
          "description": "Option SKU"
        },
        "option_value": {
          "type": "integer",
          "description": "Item id"
        },
        "extension_attributes": {
          "$ref": "#/definitions/configurable-product-data-configurable-item-option-value-extension-interface"
        }
      },
      "required": [
        "option_id"
      ]
    },
    "configurable-product-data-configurable-item-option-value-extension-interface": {
      "type": "object",
      "description": "ExtensionInterface class for @see \\Magento\\ConfigurableProduct\\Api\\Data\\ConfigurableItemOptionValueInterface"
    },
    "quote-data-cart-item-extension-interface": {
      "type": "object",
      "description": "ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\CartItemInterface"
    },
    "quote-data-address-interface": {
      "type": "object",
      "description": "Interface AddressInterface",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Id"
        },
        "region": {
          "type": "string",
          "description": "Region name"
        },
        "region_id": {
          "type": "integer",
          "description": "Region id"
        },
        "region_code": {
          "type": "string",
          "description": "Region code"
        },
        "country_id": {
          "type": "string",
          "description": "Country id"
        },
        "street": {
          "type": "array",
          "description": "Street",
          "items": {
            "type": "string"
          }
        },
        "company": {
          "type": "string",
          "description": "Company"
        },
        "telephone": {
          "type": "string",
          "description": "Telephone number"
        },
        "fax": {
          "type": "string",
          "description": "Fax number"
        },
        "postcode": {
          "type": "string",
          "description": "Postcode"
        },
        "city": {
          "type": "string",
          "description": "City name"
        },
        "firstname": {
          "type": "string",
          "description": "First name"
        },
        "lastname": {
          "type": "string",
          "description": "Last name"
        },
        "middlename": {
          "type": "string",
          "description": "Middle name"
        },
        "prefix": {
          "type": "string",
          "description": "Prefix"
        },
        "suffix": {
          "type": "string",
          "description": "Suffix"
        },
        "vat_id": {
          "type": "string",
          "description": "Vat id"
        },
        "customer_id": {
          "type": "integer",
          "description": "Customer id"
        },
        "email": {
          "type": "string",
          "description": "Billing/shipping email"
        },
        "same_as_billing": {
          "type": "integer",
          "description": "Same as billing flag"
        },
        "customer_address_id": {
          "type": "integer",
          "description": "Customer address id"
        },
        "save_in_address_book": {
          "type": "integer",
          "description": "Save in address book flag"
        },
        "extension_attributes": {
          "$ref": "#/definitions/quote-data-address-extension-interface"
        },
        "custom_attributes": {
          "type": "array",
          "description": "Custom attributes values.",
          "items": {
            "$ref": "#/definitions/framework-attribute-interface"
          }
        }
      },
      "required": [
        "region",
        "region_id",
        "region_code",
        "country_id",
        "street",
        "telephone",
        "postcode",
        "city",
        "firstname",
        "lastname",
        "email"
      ]
    },
    "quote-data-address-extension-interface": {
      "type": "object",
      "description": "ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\AddressInterface",
      "properties": {
        "gift_registry_id": {
          "type": "integer"
        }
      }
    },
    "quote-data-currency-interface": {
      "type": "object",
      "description": "Interface CurrencyInterface",
      "properties": {
        "global_currency_code": {
          "type": "string",
          "description": "Global currency code"
        },
        "base_currency_code": {
          "type": "string",
          "description": "Base currency code"
        },
        "store_currency_code": {
          "type": "string",
          "description": "Store currency code"
        },
        "quote_currency_code": {
          "type": "string",
          "description": "Quote currency code"
        },
        "store_to_base_rate": {
          "type": "number",
          "description": "Store currency to base currency rate"
        },
        "store_to_quote_rate": {
          "type": "number",
          "description": "Store currency to quote currency rate"
        },
        "base_to_global_rate": {
          "type": "number",
          "description": "Base currency to global currency rate"
        },
        "base_to_quote_rate": {
          "type": "number",
          "description": "Base currency to quote currency rate"
        },
        "extension_attributes": {
          "$ref": "#/definitions/quote-data-currency-extension-interface"
        }
      }
    },
    "quote-data-currency-extension-interface": {
      "type": "object",
      "description": "ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\CurrencyInterface"
    },
    "quote-data-cart-extension-interface": {
      "type": "object",
      "description": "ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\CartInterface",
      "properties": {
        "shipping_assignments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/quote-data-shipping-assignment-interface"
          }
        }
      }
    },
    "quote-data-shipping-assignment-interface": {
      "type": "object",
      "description": "Interface ShippingAssignmentInterface",
      "properties": {
        "shipping": {
          "$ref": "#/definitions/quote-data-shipping-interface"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/quote-data-cart-item-interface"
          }
        },
        "extension_attributes": {
          "$ref": "#/definitions/quote-data-shipping-assignment-extension-interface"
        }
      },
      "required": [
        "shipping",
        "items"
      ]
    },
    "quote-data-shipping-interface": {
      "type": "object",
      "description": "Interface ShippingInterface",
      "properties": {
        "address": {
          "$ref": "#/definitions/quote-data-address-interface"
        },
        "method": {
          "type": "string",
          "description": "Shipping method"
        },
        "extension_attributes": {
          "$ref": "#/definitions/quote-data-shipping-extension-interface"
        }
      },
      "required": [
        "address",
        "method"
      ]
    },
    "quote-data-shipping-extension-interface": {
      "type": "object",
      "description": "ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\ShippingInterface"
    },
    "quote-data-shipping-assignment-extension-interface": {
      "type": "object",
      "description": "ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\ShippingAssignmentInterface"
    },
    "quote-data-payment-interface": {
      "type": "object",
      "description": "Interface PaymentInterface",
      "properties": {
        "po_number": {
          "type": "string",
          "description": "Purchase order number"
        },
        "method": {
          "type": "string",
          "description": "Payment method code"
        },
        "additional_data": {
          "type": "array",
          "description": "Payment additional details",
          "items": {
            "type": "string"
          }
        },
        "extension_attributes": {
          "$ref": "#/definitions/quote-data-payment-extension-interface"
        }
      },
      "required": [
        "method"
      ]
    },
    "quote-data-payment-extension-interface": {
      "type": "object",
      "description": "ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\PaymentInterface",
      "properties": {
        "agreement_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "quote-data-shipping-method-interface": {
      "type": "object",
      "description": "Interface ShippingMethodInterface",
      "properties": {
        "carrier_code": {
          "type": "string",
          "description": "Shipping carrier code."
        },
        "method_code": {
          "type": "string",
          "description": "Shipping method code."
        },
        "carrier_title": {
          "type": "string",
          "description": "Shipping carrier title. Otherwise, null."
        },
        "method_title": {
          "type": "string",
          "description": "Shipping method title. Otherwise, null."
        },
        "amount": {
          "type": "number",
          "description": "Shipping amount in store currency."
        },
        "base_amount": {
          "type": "number",
          "description": "Shipping amount in base currency."
        },
        "available": {
          "type": "boolean",
          "description": "The value of the availability flag for the current shipping method."
        },
        "extension_attributes": {
          "$ref": "#/definitions/quote-data-shipping-method-extension-interface"
        },
        "error_message": {
          "type": "string",
          "description": "Shipping Error message."
        },
        "price_excl_tax": {
          "type": "number",
          "description": "Shipping price excl tax."
        },
        "price_incl_tax": {
          "type": "number",
          "description": "Shipping price incl tax."
        }
      },
      "required": [
        "carrier_code",
        "method_code",
        "amount",
        "base_amount",
        "available",
        "error_message",
        "price_excl_tax",
        "price_incl_tax"
      ]
    },
    "quote-data-shipping-method-extension-interface": {
      "type": "object",
      "description": "ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\ShippingMethodInterface"
    },
    "quote-data-payment-method-interface": {
      "type": "object",
      "description": "Interface PaymentMethodInterface",
      "properties": {
        "code": {
          "type": "string",
          "description": "Payment method code"
        },
        "title": {
          "type": "string",
          "description": "Payment method title"
        }
      },
      "required": [
        "code",
        "title"
      ]
    },
    "quote-data-totals-additional-data-interface": {
      "type": "object",
      "description": "Additional data for totals collection.",
      "properties": {
        "extension_attributes": {
          "$ref": "#/definitions/quote-data-totals-additional-data-extension-interface"
        },
        "custom_attributes": {
          "type": "array",
          "description": "Custom attributes values.",
          "items": {
            "$ref": "#/definitions/framework-attribute-interface"
          }
        }
      }
    },
    "quote-data-totals-additional-data-extension-interface": {
      "type": "object",
      "description": "ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\TotalsAdditionalDataInterface",
      "properties": {
        "gift_messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/gift-message-data-message-interface"
          }
        }
      }
    },
    "gift-message-data-message-interface": {
      "type": "object",
      "description": "Interface MessageInterface",
      "properties": {
        "gift_message_id": {
          "type": "integer",
          "description": "Gift message ID. Otherwise, null."
        },
        "customer_id": {
          "type": "integer",
          "description": "Customer ID. Otherwise, null."
        },
        "sender": {
          "type": "string",
          "description": "Sender name."
        },
        "recipient": {
          "type": "string",
          "description": "Recipient name."
        },
        "message": {
          "type": "string",
          "description": "Message text."
        },
        "extension_attributes": {
          "$ref": "#/definitions/gift-message-data-message-extension-interface"
        }
      },
      "required": [
        "sender",
        "recipient",
        "message"
      ]
    },
    "gift-message-data-message-extension-interface": {
      "type": "object",
      "description": "ExtensionInterface class for @see \\Magento\\GiftMessage\\Api\\Data\\MessageInterface",
      "properties": {
        "entity_id": {
          "type": "string"
        },
        "entity_type": {
          "type": "string"
        },
        "wrapping_id": {
          "type": "integer"
        },
        "wrapping_allow_gift_receipt": {
          "type": "boolean"
        },
        "wrapping_add_printed_card": {
          "type": "boolean"
        }
      }
    },
    "quote-data-totals-interface": {
      "type": "object",
      "description": "Interface TotalsInterface",
      "properties": {
        "grand_total": {
          "type": "number",
          "description": "Grand total in quote currency"
        },
        "base_grand_total": {
          "type": "number",
          "description": "Grand total in base currency"
        },
        "subtotal": {
          "type": "number",
          "description": "Subtotal in quote currency"
        },
        "base_subtotal": {
          "type": "number",
          "description": "Subtotal in base currency"
        },
        "discount_amount": {
          "type": "number",
          "description": "Discount amount in quote currency"
        },
        "base_discount_amount": {
          "type": "number",
          "description": "Discount amount in base currency"
        },
        "subtotal_with_discount": {
          "type": "number",
          "description": "Subtotal in quote currency with applied discount"
        },
        "base_subtotal_with_discount": {
          "type": "number",
          "description": "Subtotal in base currency with applied discount"
        },
        "shipping_amount": {
          "type": "number",
          "description": "Shipping amount in quote currency"
        },
        "base_shipping_amount": {
          "type": "number",
          "description": "Shipping amount in base currency"
        },
        "shipping_discount_amount": {
          "type": "number",
          "description": "Shipping discount amount in quote currency"
        },
        "base_shipping_discount_amount": {
          "type": "number",
          "description": "Shipping discount amount in base currency"
        },
        "tax_amount": {
          "type": "number",
          "description": "Tax amount in quote currency"
        },
        "base_tax_amount": {
          "type": "number",
          "description": "Tax amount in base currency"
        },
        "weee_tax_applied_amount": {
          "type": "number",
          "description": "Item weee tax applied amount in quote currency."
        },
        "shipping_tax_amount": {
          "type": "number",
          "description": "Shipping tax amount in quote currency"
        },
        "base_shipping_tax_amount": {
          "type": "number",
          "description": "Shipping tax amount in base currency"
        },
        "subtotal_incl_tax": {
          "type": "number",
          "description": "Subtotal including tax in quote currency"
        },
        "base_subtotal_incl_tax": {
          "type": "number",
          "description": "Subtotal including tax in base currency"
        },
        "shipping_incl_tax": {
          "type": "number",
          "description": "Shipping including tax in quote currency"
        },
        "base_shipping_incl_tax": {
          "type": "number",
          "description": "Shipping including tax in base currency"
        },
        "base_currency_code": {
          "type": "string",
          "description": "Base currency code"
        },
        "quote_currency_code": {
          "type": "string",
          "description": "Quote currency code"
        },
        "coupon_code": {
          "type": "string",
          "description": "Applied coupon code"
        },
        "items_qty": {
          "type": "integer",
          "description": "Items qty"
        },
        "items": {
          "type": "array",
          "description": "Totals by items",
          "items": {
            "$ref": "#/definitions/quote-data-totals-item-interface"
          }
        },
        "total_segments": {
          "type": "array",
          "description": "Dynamically calculated totals",
          "items": {
            "$ref": "#/definitions/quote-data-total-segment-interface"
          }
        },
        "extension_attributes": {
          "$ref": "#/definitions/quote-data-totals-extension-interface"
        }
      },
      "required": [
        "weee_tax_applied_amount",
        "total_segments"
      ]
    },
    "quote-data-totals-item-interface": {
      "type": "object",
      "description": "Interface TotalsItemInterface",
      "properties": {
        "item_id": {
          "type": "integer",
          "description": "Item id"
        },
        "price": {
          "type": "number",
          "description": "Item price in quote currency."
        },
        "base_price": {
          "type": "number",
          "description": "Item price in base currency."
        },
        "qty": {
          "type": "number",
          "description": "Item quantity."
        },
        "row_total": {
          "type": "number",
          "description": "Row total in quote currency."
        },
        "base_row_total": {
          "type": "number",
          "description": "Row total in base currency."
        },
        "row_total_with_discount": {
          "type": "number",
          "description": "Row total with discount in quote currency. Otherwise, null."
        },
        "tax_amount": {
          "type": "number",
          "description": "Tax amount in quote currency. Otherwise, null."
        },
        "base_tax_amount": {
          "type": "number",
          "description": "Tax amount in base currency. Otherwise, null."
        },
        "tax_percent": {
          "type": "number",
          "description": "Tax percent. Otherwise, null."
        },
        "discount_amount": {
          "type": "number",
          "description": "Discount amount in quote currency. Otherwise, null."
        },
        "base_discount_amount": {
          "type": "number",
          "description": "Discount amount in base currency. Otherwise, null."
        },
        "discount_percent": {
          "type": "number",
          "description": "Discount percent. Otherwise, null."
        },
        "price_incl_tax": {
          "type": "number",
          "description": "Price including tax in quote currency. Otherwise, null."
        },
        "base_price_incl_tax": {
          "type": "number",
          "description": "Price including tax in base currency. Otherwise, null."
        },
        "row_total_incl_tax": {
          "type": "number",
          "description": "Row total including tax in quote currency. Otherwise, null."
        },
        "base_row_total_incl_tax": {
          "type": "number",
          "description": "Row total including tax in base currency. Otherwise, null."
        },
        "options": {
          "type": "string",
          "description": "Item price in quote currency."
        },
        "weee_tax_applied_amount": {
          "type": "number",
          "description": "Item weee tax applied amount in quote currency."
        },
        "weee_tax_applied": {
          "type": "string",
          "description": "Item weee tax applied in quote currency."
        },
        "extension_attributes": {
          "$ref": "#/definitions/quote-data-totals-item-extension-interface"
        },
        "name": {
          "type": "string",
          "description": "Product name. Otherwise, null."
        }
      },
      "required": [
        "item_id",
        "price",
        "base_price",
        "qty",
        "row_total",
        "base_row_total",
        "options",
        "weee_tax_applied_amount",
        "weee_tax_applied"
      ]
    },
    "quote-data-totals-item-extension-interface": {
      "type": "object",
      "description": "ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\TotalsItemInterface"
    },
    "quote-data-total-segment-interface": {
      "type": "object",
      "description": "Interface TotalsInterface",
      "properties": {
        "code": {
          "type": "string",
          "description": "Code"
        },
        "title": {
          "type": "string",
          "description": "Total title"
        },
        "value": {
          "type": "number",
          "description": "Total value"
        },
        "area": {
          "type": "string",
          "description": "Display area code."
        },
        "extension_attributes": {
          "$ref": "#/definitions/quote-data-total-segment-extension-interface"
        }
      },
      "required": [
        "code",
        "value"
      ]
    },
    "quote-data-total-segment-extension-interface": {
      "type": "object",
      "description": "ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\TotalSegmentInterface",
      "properties": {
        "gift_cards": {
          "type": "string"
        },
        "tax_grandtotal_details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/tax-data-grand-total-details-interface"
          }
        },
        "gw_order_id": {
          "type": "string"
        },
        "gw_item_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "gw_allow_gift_receipt": {
          "type": "string"
        },
        "gw_add_card": {
          "type": "string"
        },
        "gw_price": {
          "type": "string"
        },
        "gw_base_price": {
          "type": "string"
        },
        "gw_items_price": {
          "type": "string"
        },
        "gw_items_base_price": {
          "type": "string"
        },
        "gw_card_price": {
          "type": "string"
        },
        "gw_card_base_price": {
          "type": "string"
        },
        "gw_base_tax_amount": {
          "type": "string"
        },
        "gw_tax_amount": {
          "type": "string"
        },
        "gw_items_base_tax_amount": {
          "type": "string"
        },
        "gw_items_tax_amount": {
          "type": "string"
        },
        "gw_card_base_tax_amount": {
          "type": "string"
        },
        "gw_card_tax_amount": {
          "type": "string"
        },
        "gw_price_incl_tax": {
          "type": "string"
        },
        "gw_base_price_incl_tax": {
          "type": "string"
        },
        "gw_card_price_incl_tax": {
          "type": "string"
        },
        "gw_card_base_price_incl_tax": {
          "type": "string"
        },
        "gw_items_price_incl_tax": {
          "type": "string"
        },
        "gw_items_base_price_incl_tax": {
          "type": "string"
        }
      }
    },
    "tax-data-grand-total-details-interface": {
      "type": "object",
      "description": "Interface GrandTotalDetailsInterface",
      "properties": {
        "amount": {
          "type": "number",
          "description": "Tax amount value"
        },
        "rates": {
          "type": "array",
          "description": "Tax rates info",
          "items": {
            "$ref": "#/definitions/tax-data-grand-total-rates-interface"
          }
        },
        "group_id": {
          "type": "integer",
          "description": "Group identifier"
        }
      },
      "required": [
        "amount",
        "rates",
        "group_id"
      ]
    },
    "tax-data-grand-total-rates-interface": {
      "type": "object",
      "description": "Interface GrandTotalRatesInterface",
      "properties": {
        "percent": {
          "type": "string",
          "description": "Tax percentage value"
        },
        "title": {
          "type": "string",
          "description": "Rate title"
        }
      },
      "required": [
        "percent",
        "title"
      ]
    },
    "quote-data-totals-extension-interface": {
      "type": "object",
      "description": "ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\TotalsInterface",
      "properties": {
        "base_customer_balance_amount": {
          "type": "number"
        },
        "customer_balance_amount": {
          "type": "number"
        },
        "reward_points_balance": {
          "type": "number"
        },
        "reward_currency_amount": {
          "type": "number"
        },
        "base_reward_currency_amount": {
          "type": "number"
        }
      }
    },
    "checkout-data-shipping-information-interface": {
      "type": "object",
      "description": "Interface ShippingInformationInterface",
      "properties": {
        "shipping_address": {
          "$ref": "#/definitions/quote-data-address-interface"
        },
        "billing_address": {
          "$ref": "#/definitions/quote-data-address-interface"
        },
        "shipping_method_code": {
          "type": "string",
          "description": "Shipping method code"
        },
        "shipping_carrier_code": {
          "type": "string",
          "description": "Carrier code"
        },
        "extension_attributes": {
          "$ref": "#/definitions/checkout-data-shipping-information-extension-interface"
        },
        "custom_attributes": {
          "type": "array",
          "description": "Custom attributes values.",
          "items": {
            "$ref": "#/definitions/framework-attribute-interface"
          }
        }
      },
      "required": [
        "shipping_address",
        "shipping_method_code",
        "shipping_carrier_code"
      ]
    },
    "checkout-data-shipping-information-extension-interface": {
      "type": "object",
      "description": "ExtensionInterface class for @see \\Magento\\Checkout\\Api\\Data\\ShippingInformationInterface"
    },
    "checkout-data-payment-details-interface": {
      "type": "object",
      "description": "Interface PaymentDetailsInterface",
      "properties": {
        "payment_methods": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/quote-data-payment-method-interface"
          }
        },
        "totals": {
          "$ref": "#/definitions/quote-data-totals-interface"
        },
        "extension_attributes": {
          "$ref": "#/definitions/checkout-data-payment-details-extension-interface"
        }
      },
      "required": [
        "payment_methods",
        "totals"
      ]
    },
    "checkout-data-payment-details-extension-interface": {
      "type": "object",
      "description": "ExtensionInterface class for @see \\Magento\\Checkout\\Api\\Data\\PaymentDetailsInterface"
    },
    "checkout-data-totals-information-interface": {
      "type": "object",
      "description": "Interface TotalsInformationInterface",
      "properties": {
        "address": {
          "$ref": "#/definitions/quote-data-address-interface"
        },
        "shipping_method_code": {
          "type": "string",
          "description": "Shipping method code"
        },
        "shipping_carrier_code": {
          "type": "string",
          "description": "Carrier code"
        },
        "extension_attributes": {
          "$ref": "#/definitions/checkout-data-totals-information-extension-interface"
        },
        "custom_attributes": {
          "type": "array",
          "description": "Custom attributes values.",
          "items": {
            "$ref": "#/definitions/framework-attribute-interface"
          }
        }
      },
      "required": [
        "address"
      ]
    },
    "checkout-data-totals-information-extension-interface": {
      "type": "object",
      "description": "ExtensionInterface class for @see \\Magento\\Checkout\\Api\\Data\\TotalsInformationInterface"
    },
    "gift-card-account-data-gift-card-account-interface": {
      "type": "object",
      "description": "Gift Card Account data",
      "properties": {
        "gift_cards": {
          "type": "array",
          "description": "Cards codes",
          "items": {
            "type": "string"
          }
        },
        "gift_cards_amount": {
          "type": "number",
          "description": "Cards amount in quote currency"
        },
        "base_gift_cards_amount": {
          "type": "number",
          "description": "Cards amount in base currency"
        },
        "gift_cards_amount_used": {
          "type": "number",
          "description": "Cards amount used in quote currency"
        },
        "base_gift_cards_amount_used": {
          "type": "number",
          "description": "Cards amount used in base currency"
        },
        "extension_attributes": {
          "$ref": "#/definitions/gift-card-account-data-gift-card-account-extension-interface"
        }
      },
      "required": [
        "gift_cards",
        "gift_cards_amount",
        "base_gift_cards_amount",
        "gift_cards_amount_used",
        "base_gift_cards_amount_used"
      ]
    },
    "gift-card-account-data-gift-card-account-extension-interface": {
      "type": "object",
      "description": "ExtensionInterface class for @see \\Magento\\GiftCardAccount\\Api\\Data\\GiftCardAccountInterface"
    },
    "acme-basket-status-interface": {
      "type": "object",
      "description": "",
      "properties": {
        "error": {
          "type": "boolean"
        },
        "status": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "error_type": {
          "type": "string"
        },
        "payment_type": {
          "type": "string"
        },
        "error_state": {
          "$ref": "#/definitions/acme-basket-error-state-interface"
        },
        "payment_statuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/acme-basket-payment-status-interface"
          }
        }
      },
      "required": [
        "error",
        "status",
        "message",
        "payment_type",
        "payment_statuses"
      ]
    },
    "acme-basket-error-state-interface": {
      "type": "object",
      "description": "",
      "properties": {
        "title": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "error_type": {
          "type": "string"
        }
      },
      "required": [
        "title",
        "message",
        "error_type"
      ]
    },
    "acme-basket-payment-status-interface": {
      "type": "object",
      "description": "",
      "properties": {
        "type": {
          "type": "string"
        },
        "available": {
          "type": "boolean"
        },
        "messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/acme-basket-message-interface"
          }
        },
        "error_code": {
          "type": "string"
        }
      },
      "required": [
        "type",
        "available",
        "messages",
        "error_code"
      ]
    },
    "acme-basket-message-interface": {
      "type": "object",
      "description": "",
      "properties": {
        "message": {
          "type": "string"
        },
        "severity": {
          "type": "string"
        }
      },
      "required": [
        "message",
        "severity"
      ]
    },
    "acme-branches-stock-branch-stock-interface": {
      "type": "object",
      "description": "",
      "properties": {
        "branch_id": {
          "type": "integer"
        },
        "branch_code": {
          "type": "string"
        },
        "branch_name": {
          "type": "string"
        },
        "branch_url": {
          "type": "string"
        },
        "todays_opening_times": {
          "type": "string"
        },
        "basket_items_stock": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/acme-branches-stock-product-stock-interface"
          }
        },
        "product_stock": {
          "$ref": "#/definitions/acme-branches-stock-product-stock-interface"
        }
      },
      "required": [
        "branch_id",
        "branch_code",
        "branch_name",
        "branch_url",
        "todays_opening_times",
        "basket_items_stock"
      ]
    },
    "acme-branches-stock-product-stock-interface": {
      "type": "object",
      "description": "",
      "properties": {
        "product_id": {
          "type": "integer"
        },
        "product_name": {
          "type": "string"
        },
        "stock": {
          "type": "boolean"
        }
      },
      "required": [
        "product_id",
        "product_name",
        "stock"
      ]
    },
    "acme-catalog-product-information-interface": {
      "type": "object",
      "description": "",
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "hireable": {
          "type": "boolean"
        },
        "url": {
          "type": "string"
        },
        "price": {
          "$ref": "#/definitions/acme-catalog-product-product-price-interface"
        },
        "sku": {
          "type": "string"
        },
        "image": {
          "type": "string"
        },
        "stock_checkable": {
          "type": "boolean"
        },
        "purchase_options": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/acme-catalog-product-purchase-option-interface"
          }
        }
      },
      "required": [
        "id",
        "name",
        "hireable",
        "url",
        "price",
        "sku",
        "image",
        "stock_checkable",
        "purchase_options"
      ]
    },
    "acme-catalog-product-product-price-interface": {
      "type": "object",
      "description": "",
      "properties": {
        "ex": {
          "type": "string",
          "description": "Representative of ex vat price (2dp float) to show all decimal points"
        },
        "inc": {
          "type": "string",
          "description": "Representative of inc vat price (2dp float) to show all decimal points"
        },
        "vat": {
          "type": "string",
          "description": "Representative of VAT price (2dp float) to show all decimal points"
        },
        "special": {
          "type": "boolean"
        }
      },
      "required": [
        "ex",
        "inc",
        "vat",
        "special"
      ]
    },
    "acme-catalog-product-purchase-option-interface": {
      "type": "object",
      "description": "",
      "properties": {
        "type": {
          "type": "string"
        },
        "available": {
          "type": "boolean"
        },
        "in_stock": {
          "type": "boolean"
        }
      },
      "required": [
        "type",
        "available",
        "in_stock"
      ]
    },
    "acme-manage-basket-result-interface": {
      "type": "object",
      "description": "",
      "properties": {
        "error": {
          "type": "boolean"
        },
        "status": {
          "type": "string"
        },
        "error_type": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "basket_status": {
          "$ref": "#/definitions/acme-basket-status-interface"
        }
      },
      "required": [
        "error",
        "status",
        "error_type",
        "message"
      ]
    }
  }
}
